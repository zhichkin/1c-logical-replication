
Процедура ОбработатьВходящиеСообщения() Экспорт
	
	МассивСообщений = ПолучитьМассивСообщений();
	
	Пока МассивСообщений.Количество() > 0 Цикл
		
		Отмена = Ложь;
		
		ОбработатьМассивСообщений(МассивСообщений, Отмена);
		
		Если Отмена Тогда Прервать; КонецЕсли;
		
		МассивСообщений = ПолучитьМассивСообщений();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьМассивСообщений()
	
	МассивСообщений = Новый Массив();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1000
	|	МоментВремени,
	|	Идентификатор,
	|	Отправитель,
	|	Заголовки,
	|	ТипСообщения,
	|	ТелоСообщения,
	|	КоличествоОшибок
	|ИЗ
	|	РегистрСведений.МеханизмРепликацииВходящаяОчередь
	|ГДЕ
	|	КоличествоОшибок < 5
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени ВОЗР, Идентификатор ВОЗР
	|";
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат МассивСообщений;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Сообщение = Новый Структура();
		
		Для Каждого Колонка Из Результат.Колонки Цикл
			Сообщение.Вставить(Колонка.Имя, Выборка[Колонка.Имя]);
		КонецЦикла;
		
		МассивСообщений.Добавить(Сообщение);
		
	КонецЦикла;
	
	Возврат МассивСообщений;
	
КонецФункции

Процедура ОбработатьМассивСообщений(МассивСообщений, Отмена)
	
	Для Каждого Сообщение Из МассивСообщений Цикл
		
		ОбработатьВходящееСообщение(Сообщение, Отмена);
		
		Если Отмена Тогда Прервать; КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработатьВходящееСообщение(Сообщение, Отмена)
	
	//Отправитель = ПланыОбмена.МеханизмРепликации.НайтиПоКоду(Сообщение.Отправитель);
	
	ТипОбъекта = "";
	ИмяОбъекта = "";
	СериализаторJDTO.ОпределитьТипИмяОбъектаПоТипуСообщения(Сообщение.ТипСообщения, ТипОбъекта, ИмяОбъекта);
	
	Заголовки = СериализаторJDTO.FromJSON(Сообщение.Заголовки);
	
	ОбъектДанных = ПолучитьОбъектДанныхИзСообщения(Сообщение, Заголовки);
	
	Если ОбъектДанных = Неопределено Тогда
		Отмена = Истина; // Блокируем обработку входящей очереди - "отравленное" сообщение
		ЗафиксироватьОшибкуВходящейОчереди(Сообщение, "Не удалось получить объект данных");
		Возврат;
	КонецЕсли;
	
	НачатьТранзакцию();
	
	Попытка
		
		ЗаписатьОбъектДанных(ТипОбъекта, ОбъектДанных, Заголовки);
		
		УдалитьВходящееСообщение(Сообщение);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		Отмена = Истина;
		ОтменитьТранзакцию();
		ТекстОшибки = ОписаниеОшибки();
		ЗафиксироватьОшибкуВходящейОчереди(Сообщение, ТекстОшибки);
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаписатьОбъектДанных(ТипОбъекта, ОбъектДанных, Заголовки)

	//ОбъектДанных.ОбменДанными.Отправитель = Отправитель;

	ОбъектДанных.ОбменДанными.Загрузка = Истина;
	ОбъектДанных.ОбменДанными.Получатели.Очистить();
	ОбъектДанных.ОбменДанными.Получатели.Автозаполнение = Ложь;
	ОбъектДанных.ДополнительныеСвойства.Вставить("НеИспользоватьМеханизмРепликации");

	Если СериализаторJDTO.ЭтоСсылочныйТипОбъекта(ТипОбъекта) Тогда
		
		Если ТипОбъекта = "Документ" И Заголовки.command = "POST" Тогда
			ОбъектДанных.Записать(РежимЗаписиДокумента.Проведение);
		Иначе
			ОбъектДанных.Записать();
		КонецЕсли;
		
	Иначе
		Добавление = (Заголовки.command = "INSERT");
		ОбъектДанных.Записать(Не Добавление);
	КонецЕсли;
	
КонецПроцедуры

Процедура УдалитьВходящееСообщение(Сообщение)
	
	Набор = РегистрыСведений.МеханизмРепликацииВходящаяОчередь.СоздатьНаборЗаписей();
	
	Набор.Отбор.МоментВремени.Установить(Сообщение.МоментВремени);
	Набор.Отбор.Идентификатор.Установить(Сообщение.Идентификатор);
	
	Набор.ОбменДанными.Загрузка = Истина;
	Набор.ОбменДанными.Получатели.Очистить();
	Набор.ОбменДанными.Получатели.Автозаполнение = Ложь;
	
	// На всякий случай =)
	Набор.ДополнительныеСвойства.Вставить("НеИспользоватьМеханизмРепликации");
	
	Набор.Записать();
	
КонецПроцедуры

Процедура ЗафиксироватьОшибкуВходящейОчереди(Сообщение, ТекстОшибки)
	
	Набор = РегистрыСведений.МеханизмРепликацииВходящаяОчередь.СоздатьНаборЗаписей();
	
	Набор.Отбор.МоментВремени.Установить(Сообщение.МоментВремени);
	Набор.Отбор.Идентификатор.Установить(Сообщение.Идентификатор);
	Набор.Прочитать();
	
	Если Набор.Количество() = 0 Тогда
		Возврат; // На всякий случай =)
	КонецЕсли;
	
	Запись = Набор[0];
	Запись.ОписаниеОшибки = ТекстОшибки;
	Запись.КоличествоОшибок = Запись.КоличествоОшибок + 1;
	
	Набор.ОбменДанными.Загрузка = Истина;
	Набор.ОбменДанными.Получатели.Очистить();
	Набор.ОбменДанными.Получатели.Автозаполнение = Ложь;
	
	// На всякий случай =)
	Набор.ДополнительныеСвойства.Вставить("НеИспользоватьМеханизмРепликации");
	
	Набор.Записать();
	
КонецПроцедуры


Функция ПолучитьОбъектДанныхИзСообщения(Сообщение, Заголовки)
	
	ТипСообщения = Сообщение.ТипСообщения;
	ТелоСообщения = Сообщение.ТелоСообщения;
	
	Возврат СериализаторJDTO.ПрочитатьJDTO(ТипСообщения, ТелоСообщения);

КонецФункции


